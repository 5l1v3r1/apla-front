matrix:
  include:
    - os: osx
      osx_image: xcode9.4
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: generic

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

script:
  - CI=true yarn test --passWithNoTests --ci
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build-desktop && yarn release --linux --win"
        yarn build
    else
      yarn install
      yarn build-desktop
      yarn release -m
    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

before_deploy:
  - echo '<!DOCTYPE html><html><head><meta charset=utf-8><title>Genesis</title><script type="text/javascript">var segmentCount=0;var l=window.location;l.replace(l.protocol+"//"+l.hostname+(l.port?":"+l.port:"")+l.pathname.split("/").slice(0,1+segmentCount).join("/")+"/?p=/"+l.pathname.slice(1).split("/").slice(segmentCount).join("/").replace(/&/g,"~and~")+(l.search?"&q="+l.search.slice(1).replace(/&/g,"~and~"):"")+l.hash);</script></head><body></body></html>' > ./build/404.html
  - echo \{\"fullNodes\":[\"https://testapla0.apla.io:7079\",\"https://testapla1.apla.io:7079\",\"https://testapla2.apla.io:7079\"]\} > ./build/settings.json

deploy:
  provider: pages
  skip-cleanup: true
  keep-history: true
  target-branch: gh-pages
  local-dir: build
  fqdn: front.genesis.space
  github-token: $GITHUB_TOKEN
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = LINUX

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"